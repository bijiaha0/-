PHP字符串的定义方式以及各自区别：
 单引号：
   单引号不能解析变量
   单引号不能解析转义字符，只能解析单引号和反斜线本身
   变量和变量、变量和字符串、字符串和字符串之间可以用.连接
 双引号：
   双引号可以解析变量，变量可以使用特殊字符和{}包含
   双引号可以解析所有转义字符
   也可以使用.来连接
   
 单引号的效率要高于双引号。

   $str="abcedf'{$a}'gh"-----> abcdef$a的值gh
   $sql = 'SELECT * FROM user WHERE name = \".name.'\";

   Heredoc 类似于双引号
   Newdoc 类似于单引号
   两者都用来处理大文本
   
数据类型：
  三大数据类型（标量、符合、特殊）

  浮点类型不能运用到相等运算中（$a+$b==0.8）。

  布尔类型  false的七种情况
            0,0.0,'','0',false,array(),NULL
            
  数组类型
    超全局数组
    $GLOBALS、$_GET、$_POST、$_REQUEST、$_SESSION、$_COOKIE、$_FILES、$_ENV
  
  NULL的三种情况
    直接赋值为NULL、未定义的变量、unset销毁的变量
    
  常量---定义：const、define
             const更快，是语言结构，define是函数。
             define不能用于类常量的定义，const可以
             常量一经定义，不能被修改，不能被删除。
             


PHP的运算符的错误控制符@
  PHP支持一个错误运算符：@。当将其放置在一个PHP表达式之前，该表达式可能产生的任何错误信息都被忽略掉。
PHP所有运算符考点
 运算符的优先级
 比较运算符
   ==（值）与===（值+类型）的区别
   等值判断（false的七种情况）
 递增/递减运算符
   递增/递减运算符不影响布尔值
   递减NULL值没有效果
   递增NULL值为1
   递增和递减在前就先运算后返回，反之就先返回，后运算。
 逻辑运算符
    短路作用
    ||和&&与or和and的优先级不同

PHP的遍历数组的三种方式及各自区别
  使用for循环、
  使用foreach循环、
  使用while、list()、each()组合循环。
  for循环只能遍历索引数组、foreach可以遍历索引和关联数组，联合使用list()、each()和while循环同样可以遍历索引和关联数组。
  while、list()、each()组合不会reset()
  foreach遍历会对数组进行reset()操作。


if......elseif
  在elseif语句中只能有一个表达式为true，即在elseif语句中只能有一个语句块被执行，多个elseif从句是排斥关系。
  使用elseif语句有一个基本原则，总把优先范围小的条件放在前面处理。


if(exp1){
}elseif(exp2){
}elseif(exp3){
}else{
}


switch...case...
和if不同的是，switch后面的控制表达式的数据类型只能是整形、浮点类型或者字符串。

continue语句作用到switch的作用类似于break
跳出switch外的for循环，可以使用continue2。


变量的作用域
   变量的作用域也称变量的范围，变量的范围即它定义的上下文背景（也是它的生效范围）。大部分的PHP变量只有一个单独的范围。
   这个单独的范围跨度同样包含了include和require引入的文件。
   对于php来说，默认情况下，全局变量是不能拿到函数内部来使用的，需要使用global关键字，把外部的变量拿到内部来使用。
   
   $outer='str';
   function mgfunc(){
     global $outer;或者是使用 $GLOBALS['outer'];
     echo $outer;
   }
静态变量
   静态变量仅在局部函数域中存在，单当程序执行离开此作用域时，其值并不会消失。
   static关键字
     1、仅初始化一次，下一次就不会执行这一行代码啦。
     2、初始化时需要赋值
     3、每次执行函数该值会保留
     4、static修饰的变量是局部的，仅在函数内部有效
     5、可以记录函数的调用次数，从而可以在某些条件下终止递归。
函数的参数以及参数的引用传递
函数的返回值以及引用返回
外部文件的导入
系统内置函数


函数的参数：
  默认情况下，函数参数通过值传递
  如果希望允许函数修改它的值，必须通过引用传递参数
  
  
引用传递
$a=1;
function muFun(&$a){
  $a=2
}
myFunc($a);
echo $a; ----> 2



函数的返回值
    值通过使用可选的返回语句(return)返回
    可以返回包括数组和对象的任意类型
    返回语句会中止函数执行，将控制权交回函数调用处。
    省略return，返回值为NULL，不可有多个返回值。
